// generated with ast extension for cup
// version 0.8
// 24/7/2018 0:35:2


package rs.ac.bg.etf.pp1.ast;

public class Expr1 extends Expr {

    private TermExpanded TermExpanded;

    public Expr1 (TermExpanded TermExpanded) {
        this.TermExpanded=TermExpanded;
        if(TermExpanded!=null) TermExpanded.setParent(this);
    }

    public TermExpanded getTermExpanded() {
        return TermExpanded;
    }

    public void setTermExpanded(TermExpanded TermExpanded) {
        this.TermExpanded=TermExpanded;
    }

    public void accept(Visitor visitor) {
        visitor.visit(this);
    }

    public void childrenAccept(Visitor visitor) {
        if(TermExpanded!=null) TermExpanded.accept(visitor);
    }

    public void traverseTopDown(Visitor visitor) {
        accept(visitor);
        if(TermExpanded!=null) TermExpanded.traverseTopDown(visitor);
    }

    public void traverseBottomUp(Visitor visitor) {
        if(TermExpanded!=null) TermExpanded.traverseBottomUp(visitor);
        accept(visitor);
    }

    public String toString(String tab) {
        StringBuffer buffer=new StringBuffer();
        buffer.append(tab);
        buffer.append("Expr1(\n");

        if(TermExpanded!=null)
            buffer.append(TermExpanded.toString("  "+tab));
        else
            buffer.append(tab+"  null");
        buffer.append("\n");

        buffer.append(tab);
        buffer.append(") [Expr1]");
        return buffer.toString();
    }
}
